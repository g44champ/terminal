JSON
1. Создать внешний репозиторий c названием JSON.
https://github.com/g44champ/JSON
***

2. Клонировать репозиторий JSON на локальный компьютер.
Copy https code
git clone https://github.com/g44champ/JSON.git
***

3. Внутри локального JSON создать файл “new.json”.
touch new.json
***

4. Добавить файл под гит.
git add new.json
***

5. Закоммитить файл.
git commit -m "create new.json"
***

6. Отправить файл на внешний GitHub репозиторий.
git push
***

7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json >>> i >>> "add info" >>> esq >>> :wq
***

8. Отправить изменения на внешний репозиторий.
git commit -am "Perosnal info"
git push
***

9. Создать файл preferences.json
touch preferences.json
***

10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json >>> i >>> "add info" >>> esq >>> :x
***

11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json >>> vim skills.json >>> i >>> "add info" >>> esq >>> :x
***

12. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json >>> git commit -m "Add new 2 files" >>> git push
***

13. На веб интерфейсе создать файл bug_report.json.
add file >>> Create new file
***

14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file
***

15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit this file >>> "add info"
***

16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes
***

17. Синхронизировать внешний и локальный репозиторий JSON
git pull
***

XML
18. Создать внешний репозиторий c названием XML.
https://github.com/g44champ/XML.git
***

19. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/g44champ/XML.git
***

20. Внутри локального XML создать файл “new.xml”.
touch new.xml
***

21. Добавить файл под гит.
git add new.xml
***

22. Закоммитить файл.
git commit -m "New xml file"
***

23. Отправить файл на внешний GitHub репозиторий.
git push
***

24. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml >>> i >>> "add info" >> esq >>> :x
***

25. Отправить изменения на внешний репозиторий.
git commit -am "new info on file"
git push
***

26. Создать файл preferences.xml
touch preferences.xml
***

27. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml >>> i >>> "add info" >>> esc >>> :x
***

28. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml >>> i >>> "add info" >>> esc >>> :x
***

29. Сделать коммит в одну строку.
git add preferences.xml skills.xml
git commit -m "2 new files"
***

30. Отправить сразу 2 файла на внешний репозиторий.
git push
***

31. На веб интерфейсе создать файл bug_report.xml.
add file >>> Create new file
***

32. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit new file
***

33. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
edit this file >>> "add info"
***

34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes
***

35. Синхронизировать внешний и локальный репозиторий XML
git pull
***

TXT
36. Создать внешний репозиторий c названием TXT.
https://github.com/g44champ/TXT
***

37. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/g44champ/TXT.git
***

38. Внутри локального TXT создать файл “new.txt”.
touch new.txt
***

39. Добавить файл под гит.
git add new.txt
***

40. Закоммитить файл.
git commit -m "New file"
***

41. Отправить файл на внешний GitHub репозиторий.
git push
***

42. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt >>> i >>> "add info" >>> esc >>> :x
***

43. Отправить изменения на внешний репозиторий.
git commit -am "New info"
git push
***

44. Создать файл preferences.txt
touch preferences.txt
***

45. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt >>> i >>> "add info" >>> esc >>> :x
***

46. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
vim skills.txt >>> i >>> "add info" >>> esc >>> :x
***

47. Сделать коммит в одну строку.
git add preferences.txt skills.txt
git commit -m "2 new files"
***

48. Отправить сразу 2 файла на внешний репозиторий.
git_push
***

49. На веб интерфейсе создать файл bug_report.txt.
Add file >>> Create new file
***

50. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit new file
***

51. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
edit this file >>> "add info"
***

52. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit changes
***

53. Синхронизировать внешний и локальный репозиторий TXT
git pull
***